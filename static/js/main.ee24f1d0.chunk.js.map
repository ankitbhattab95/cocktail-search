{"version":3,"sources":["components/search.module.css","components/list-item.js","config/config.js","config/constants.js","components/list.js","components/name.js","components/search-box.js","components/cocktail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ListItem","props","Dropdown","Item","onClick","itemClicked","list","config","constants","category","ingredient","name","List","useState","fetchedData","setFetchedData","listItems","data","useEffect","menu","a","axios","get","drinks","getDetails","map","el","i","titleUpdate","strCategory","strIngredient1","DropdownButton","id","variant","title","Name","className","css","label","input","onChange","nameHandler","SearchBox","result","includes","Card","card","Header","Body","Title","Text","Toggle","Menu","menuClicked","value","Button","btn","searchHandler","Cocktail","style","width","Img","src","strDrinkThumb","textAlign","strDrink","App","componentDidUpdate","state","submit","setState","keyword","event","target","outerText","this","Fragment","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee24f1d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"search_input__25n5w\",\"card\":\"search_card__39BQi\",\"label\":\"search_label__1ikxI\",\"btn\":\"search_btn__18R5M\",\"result\":\"search_result__33dSl\"};","import React from 'react'\nimport {Dropdown} from 'react-bootstrap';\n\nfunction ListItem(props) {\n    return (\n        <div>\n            <Dropdown.Item onClick={props.itemClicked}>{props.list}</Dropdown.Item>\n        </div>\n    )\n}\n\nexport default ListItem\n","export const config ={\n    filterByCategoryUrl : \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=\",\n    filterByIngredientUrl : \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=\",\n    searchByKeywordUrl : \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\",\n    listCategoryUrl: \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\",\n    listIngredientUrl: \"https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\"\n}","export const constants ={\n    category : \"Category\",\n    ingredient : \"Ingredient\",\n    name : \"Name\",\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React , {useEffect, useState} from 'react'\nimport {DropdownButton} from 'react-bootstrap';\nimport ListItem from './list-item';\nimport axios from 'axios'\nimport {config} from '../config/config'\nimport {constants} from '../config/constants'\n\nconst List = (props)=> {\n\n    const [fetchedData, setFetchedData] = useState(null)\n    let listItems = null\n    let data = null\n\n    useEffect( () => {\n        if(props.props.menu === constants.category){\n            const getDetails = async () => {\n                data = await  axios.get(config.listCategoryUrl)\n                data = data.data.drinks\n                setFetchedData(data)\n            }\n            getDetails()\n        }else if(props.props.menu === constants.ingredient){\n            const getDetails = async () => {\n                data = await  axios.get(config.listIngredientUrl)\n                data = data.data.drinks\n                setFetchedData(data)\n            }\n            getDetails()\n        }\n     }, [props.props.menu])\n\n     if(props.props.menu === constants.category && fetchedData){\n         listItems = fetchedData.map((el,i) =>{\n             return <ListItem key={i} itemClicked={props.props.titleUpdate} list={el.strCategory}></ListItem>\n         })\n     }\n\n     if(props.props.menu === constants.ingredient && fetchedData){\n        listItems = fetchedData.map((el,i) =>{\n            return <ListItem key={i} itemClicked={props.props.titleUpdate} list={el.strIngredient1}></ListItem>\n        })\n    }\n\n    return (\n        <div >\n            <DropdownButton id=\"dropdown-basic-button\"  variant=\"success\" title = {props.props.title}>\n                {listItems}\n            </DropdownButton>\n            <br/>\n        </div>\n    )\n}\n\nexport default List\n","import css from './search.module.css';\nimport React from 'react'\n\nfunction Name(props) {\n    return (\n        <div>\n            <label className={css.label}>\n                    Search keyword :\n                    <input className={css.input} onChange ={props.props.nameHandler}></input>\n                </label>\n        </div>\n    )\n}\n\nexport default Name\n","import React from 'react'\nimport {Button, Card, Dropdown} from 'react-bootstrap';\nimport css from './search.module.css';\nimport List from './list'\nimport Name from './name'\nimport {constants} from '../config/constants'\n\nconst SearchBox = (props) => {\n    let result =null\n    if([constants.category,constants.ingredient].includes(props.menu)){\n        result = <List props={props}/>\n    } else if([constants.name].includes(props.menu)){\n        result = <Name props={props}/>\n    }\n\n    return (\n        <Card className={css.card}>\n            <Card.Header>Cocktail search</Card.Header>\n            <Card.Body>\n            <Card.Title>Search cocktails based on category, name or ingredients</Card.Title>\n            <Card.Text>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {props.menu}\n                </Dropdown.Toggle>\n                <Dropdown.Menu >\n                    <Dropdown.Item onClick = {props.menuClicked} value= {constants.category}>Category</Dropdown.Item>\n                    <Dropdown.Item onClick = {props.menuClicked} value= {constants.name}>Name</Dropdown.Item>\n                    <Dropdown.Item onClick = {props.menuClicked} value= {constants.ingredient}>Ingredient</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            </Card.Text>\n            {result}\n            <Button className={css.btn} variant=\"primary\" onClick={props.searchHandler}>Search</Button>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport {Card} from 'react-bootstrap';\n\n\nfunction Cocktail(props) {\n    return (\n        <div >\n            <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={props.data.strDrinkThumb} />\n            <Card.Body>\n                <Card.Title style={{textAlign:'center'}}>{props.data.strDrink}</Card.Title>\n            </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Cocktail\n","import React, { Component } from 'react'\nimport './App.css';\nimport SearchBox from './components/search-box';\nimport css from './components/search.module.css';\nimport Cocktail from './components/cocktail'\nimport axios from 'axios';\nimport {config} from './config/config'\nimport {constants} from './config/constants'\nexport class App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n             menu: \"Choose search criteria\",\n             keyword: null,\n             title: \"Choose from list\",\n             submit: false,\n             fetchedData: null\n        }\n    }\n\n    componentDidUpdate = () => {\n        if(this.state.submit && this.state.menu === constants.category){\n            const getDetails = async () => {\n                let data = await  axios.get(config.filterByCategoryUrl+this.state.title)\n                data = data.data\n                this.setState({...this.state, fetchedData: data, submit: false})\n            }\n            getDetails()\n        }\n        else if(this.state.submit && this.state.menu === constants.ingredient){\n            const getDetails = async () => {\n                let data = await  axios.get(config.filterByIngredientUrl+this.state.title)\n                data = data.data\n                this.setState({...this.state, fetchedData: data, submit: false})\n            }\n            getDetails()\n        }\n        else if(this.state.submit && this.state.menu === constants.name){\n            const getDetails = async () => {\n                let data = await  axios.get(config.searchByKeywordUrl + this.state.keyword)\n                data = data.data\n                this.setState({...this.state, fetchedData: data, submit: false})\n            }\n            getDetails()\n        }\n    }\n\n    menuClicked =(event)=>{\n        this.setState({...this.state,\n            menu : event.target.outerText,\n            submit: false,\n            title: \"Choose from list\"})\n    }\n\n    searchHandler = async ()=>{\n        if([constants.category, constants.ingredient, constants.name].includes(this.state.menu)){\n            this.setState({...this.state,submit: true})\n        }\n    }\n\n    nameHandler = (event) => {\n        this.setState({...this.state, keyword: event.target.value})\n    }\n\n    titleUpdate = (event) =>{\n        this.setState({...this.state,\n            submit:false,\n            title:event.target.outerText\n        })\n    }\n\n    render(){\n        let result = null\n        if(this.state.fetchedData){\n            if(this.state.fetchedData.drinks){\n                const data = this.state.fetchedData.drinks.map((el,i) => {\n                    return <Cocktail data = {el} key={i}/>\n                })\n                result= (<div className={css.result}>{data}</div>)\n            }\n            else {\n                result = \"No result found\"\n            }\n        }\n\n        return (\n        <React.Fragment>\n            <div className=\"App\">\n             <SearchBox menu={this.state.menu}\n              title = {this.state.title}\n              keyword= {this.state.keyword}\n              nameHandler = {this.nameHandler}\n              searchHandler ={this.searchHandler}\n              titleUpdate={this.titleUpdate}\n              menuClicked={this.menuClicked}\n              />\n            </div >\n                {result}\n        </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}